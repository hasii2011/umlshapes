
from unittest import TestSuite
from unittest import main as unitTestMain

from codeallyadvanced.ui.UnitTestBaseW import UnitTestBaseW

from pyutmodelv2.PyutActor import PyutActor

from umlshapes.lib.ogl import OGLInitialize
# from umlshapes.mixins.IDMixin import InvalidOperationError

from umlshapes.shapes.UmlActor import UmlActor


class TestIDMixin(UnitTestBaseW):
    """
    Auto generated by the one and only:
        Gato Malo â€“ Humberto A. Sanchez II
        Generated: 30 August 2025
    """

    @classmethod
    def setUpClass(cls):
        super().setUpClass()

    def setUp(self):
        super().setUp()
        OGLInitialize()

    def tearDown(self):
        super().tearDown()

    def testUniqueIds(self):

        pyutActor: PyutActor = PyutActor(actorName='John Wilkes Booth')
        umlActor:  UmlActor = UmlActor(pyutActor=pyutActor)

        umlActor2:  UmlActor = UmlActor()

        self.assertFalse(umlActor.id == umlActor2.id, 'IDs should be unique')

    # def testInvalidGetId(self):
    #     umlActor: UmlActor = UmlActor()
    #     self.assertRaises(InvalidOperationError, lambda: umlActor.GetId())


def suite() -> TestSuite:
    import unittest

    testSuite: TestSuite = TestSuite()

    testSuite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(testCaseClass=TestIDMixin))

    return testSuite


if __name__ == '__main__':
    unitTestMain()
