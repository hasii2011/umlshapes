
from unittest import TestSuite
from unittest import main as unitTestMain

from codeallybasic.UnitTestBase import UnitTestBase

from tests.ClosestPoint import DetermineClosestPoint
from tests.ClosestPoint import ClosestPoint
from tests.ClosestPoint import FromPoint
from tests.ClosestPoint import LinePoint


class TestDetermineClosesPoint(UnitTestBase):
    """
    Auto generated by the one and only:
        Gato Malo â€“ Humberto A. Sanchez II
        Generated: 11 May 2025
    """

    @classmethod
    def setUpClass(cls):
        super().setUpClass()

    def setUp(self):
        super().setUp()

    def tearDown(self):
        super().tearDown()

    def testSimple(self):

        point1:    LinePoint = LinePoint(x=238, y=307)
        point2:    LinePoint = LinePoint(x=240, y=308)
        fromPoint: FromPoint = FromPoint(x=410, y=243)

        actual:   ClosestPoint = DetermineClosestPoint.determineClosestPoint(point1, point2, fromPoint)
        expected: ClosestPoint = ClosestPoint(x=350, y=363)

        self.assertEqual(expected, actual, 'Algorithm Broken!!!')

    def testSimpleAgain(self):

        point1:    LinePoint = LinePoint(x=225, y=235)
        point2:    LinePoint = LinePoint(x=550, y=440)
        fromPoint: FromPoint = FromPoint(x=540, y=445)

        actual:   ClosestPoint = DetermineClosestPoint.determineClosestPoint(point1, point2, fromPoint)
        expected: ClosestPoint = ClosestPoint(x=545, y=437)

        self.assertEqual(expected, actual, 'Algorithm Broken!!!')


def suite() -> TestSuite:
    import unittest

    testSuite: TestSuite = TestSuite()

    testSuite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(testCaseClass=TestDetermineClosesPoint))

    return testSuite


if __name__ == '__main__':
    unitTestMain()
